/* global __dirname */
/* generated by unstuck-webpack */

var path = require('path');
var webpack = require('webpack');
// var dir_js = path.resolve(__dirname, '../src');
// var dir_css = path.resolve(__dirname, '../css');
// var dir_build = path.resolve(__dirname, '../dist');
var fs = require('fs');

// var nodeModules = {};
// fs.readdirSync('node_modules')
// .filter(function(x) {
//   return ['.bin'].indexOf(x) === -1;
// })
// .forEach(function(mod) {
//   nodeModules[mod] = 'commonjs ' + mod;
// });

module.exports = {
  context: __dirname,
  output: {
    publicPath: path.resolve(__dirname),
    filename: 'bundle.js'
  },
  // entry: {
  //   app : path.resolve(dir_js, 'server.js')
  // },
  // target : 'node',
  // externals: checkNodeImport,
  // context: __dirname,
  // node: {
  //   global: true,
  //   __dirname: true,
  //   __filename: true,
  //   process: true,
  //   Buffer: true
  // },
  //   plugins: [
  //   new HtmlWebpackPlugin({
  //     template: 'app/index.tpl.html',
  //     inject: 'body',
  //     filename: 'index.html'
  //   }),
  // ],
  // externals: nodeModules,
  resolve: {

    modules: [path.join(__dirname, '/src/main/js'), 'node_modules'],
    // modules: ['node_modules', dir_js],
    extensions: ['.jsx','.js','.json']
    //  extensions: ['', '.js','.ts', '.tsx', '.jsx', '.css', '.svg'],
    //      alias: {
    //        'clipboard': 'clipboard/dist/clipboard.min.js'
    //      }
  },
  stats: {
    colors: true,
    chunkModules: false
  },
  plugins: [
    new webpack.NoEmitOnErrorsPlugin(),

    // new webpack.DefinePlugin(
    //   {
    //     'process.env.NODE_ENV': '"production"',
    //     __CLIENT__: false,
    //     __SERVER__: true,
    //     __PRODUCTION__:true,
    //     __DEV__: false,
    //   }
    // ),

    // new webpack.LoaderOptionsPlugin(
    //   {
    //     options: {
    //       minimize: true,
    //       debug: false
    //     }
    //   }
    // ),
    new webpack.DefinePlugin({
      'process.env':{
        'NODE_ENV': JSON.stringify('production')
      }
    }),
    // new webpack.optimize.UglifyJsPlugin({
    //   compress:{
    //     warnings: false
    //   }
    // })
  ],

  module: {
    rules: [
      {
        loader: 'babel-loader',
        test: /\.js($|\?)|\.jsx($|\?)/,
        exclude: /node_modules/,
        query: {
          presets : ['es2015','react', 'stage-2']
        }
      },
      // {
      //   loader: 'file?name=assets[name].[ext]',
      //   test: /\.png($|\?)|\.woff($|\?)|\.woff2($|\?)|\.ttf($|\?)|\.eot($|\?)|\.svg($|\?)/
      // },
      // {
      //   loader: 'babel-loader',
      //   test: /\.js($|\?)|\.jsx($|\?)/,
      //   exclude: /node_modules/,
      //   query: {
      //     presets : ['es2015', 'react', 'stage-2']
      //   }
      // },
      // {
      //   loader: 'file?name=/[name].html',
      //   test: /\.html$/
      // }
      // ,
      // {
      //   test: /\.svg$/,
      //   exclude: /node_modules/,
      //   use: [
      //     {
      //       loader: 'babel-loader',
      //       exclude: /node_modules/,
      //       presets : ['es2015', 'react']
      //     },
      //     {
      //       loader: 'react-svg-loader',
      //       options: {
      //         jsx: false,
      //         svgo: {
      //           plugins: [{mergePaths: false}]
      //         }
      //       }
      //     }
      //   ]
      // }
    ]
  }
}
function checkNodeImport(context, request, cb) {
  if (!path.isAbsolute(request) && request.charAt(0) !== '.') {
    cb(null, 'commonjs ' + request); return;
  }
  cb();
}
